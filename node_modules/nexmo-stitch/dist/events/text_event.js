/*
 * Nexmo Stitch SDK
 *  Text Event Object Model
 *
 * Copyright (c) Nexmo Inc. 2017-2018
 */

const Event = require('./event');

/**
 * A text event
 *
 * @class TextEvent
 * @extends Event
 */
class TextEvent extends Event {
    constructor(conversation, params) {
        super(conversation, params);
        this.type = "text";
        this.conversation = conversation;
        this.state = {
            seen_by: {},
            delivered_to: {}
        };
        if (params && params.body && params.body.timestamp) {
            this.timestamp = params.body.timestamp;
        }
        Object.assign(this, params);
    }

    /**
     * Set the message status to 'seen'
     * @returns {Promise}
     */
    seen() {
        return super.seen();
    }

    /**
     * Set the message status to 'delivered'.
     * handled by the SDK
     * @returns {Promise}
     */
    delivered() {
        return super.delivered();
    }

    /**
     * Delete the event
     * @returns {Promise}
     */
    del() {
        return super.del();
    }
}
module.exports = TextEvent;
